Contributing
============

Contributions are welcome, and they are greatly appreciated! The development of this package takes place on 
`GitHub <https://github.com/irtazahashmi/pytspl/tree/dev>`_. Issues, bugs, and feature requests should be reported 
`there <https://github.com/irtazahashmi/pytspl/issues>`_. Code and documentation can be improved by submitting a 
`pull request <https://github.com/irtazahashmi/pytspl/pulls>`_. Please add documentation and tests for any new code.

How to Contribute
-----------------

To contribute, follow these steps:

1. **Fork the repository**: Start by forking the repository to your own GitHub account.

2. **Clone the repository**: Clone your forked repository to your local machine.

.. code-block:: console

   $ git clone https://github.com/your-username/pytspl.git

3. **Install the dependencies**: Install the dependencies using Poetry.

.. code-block:: console

   $ poetry install

4. **Create a new branch**: Create a new branch for your changes.

.. code-block:: console

   $ git checkout -b your-branch-name

5. **Make your changes**: Improve or add functionality in the ``pytspl`` folder, along with corresponding 
unit tests in ``pytspl/tests/test_*.py`` (with reasonable coverage). If you have a nice example to demonstrate 
the use of the introduced functionality, please consider adding a tutorial in ``doc/tutorial``.

6. **Update documentation**: Update ``README.md`` and ``CHANGELOG.rst`` if applicable.

7. **Check the style and run tests**: Ensure your code meets the style guidelines and all tests pass. You can do 
this by running the following commands:

.. code-block:: console

   $ poetry run pflake8 pytspl
   $ poetry run pytest

8. **Build the documentation**:  First, clean the existing build files: 

.. code-block:: console

   $ make -C doc clean

Then, build the documentation to ensure it builds correctly.

.. code-block:: console

   $ poetry run sphinx-build -b html -d doc/_build/doctrees doc doc/_build/html

9.  **Check coverage**: Check the generated coverage report at **htmlcov/index.html** to make sure the tests 
reasonably cover the changes you've introduced. The coverage report can be generated by running:

.. code-block:: console

   $ poetry run coverage run -m pytest && poetry run coverage report -m


10. **Bump the version**: If you have made changes that affect the functionality of the package, you should
bump the version number in the ``pyproject.toml`` file. The version number should follow the
`Semantic Versioning <https://semver.org/>`_ guidelines. Additionally, bump the version in the ``pytspl/__init__.py`` 
file.

11. **Submit a pull request**: Go to the original repository on GitHub and submit a pull request. Ensure you 
fill in the pull request template with all relevant details.

Making a release
----------------

Todo.

Thank you for contributing!
